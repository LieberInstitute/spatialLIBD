% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sce_image_clus_p.R
\name{sce_image_clus_p}
\alias{sce_image_clus_p}
\title{Sample spatial cluster visualization workhorse function}
\usage{
sce_image_clus_p(sce, d, clustervar, sampleid, colors, spatial, title)
}
\arguments{
\item{sce}{Defaults to the output of
\code{fetch_data(type = 'sce')}. This is a
\linkS4class{SingleCellExperiment}
object with the spot-level Visium data and information required for
visualizing the histology. See \code{\link[=fetch_data]{fetch_data()}} for more details.}

\item{d}{A data.frame with the sample-level information. This is typically
obtained using \code{as.data.frame(colData(sce))}.}

\item{clustervar}{A \code{character(1)} with the name of the \code{colData(sce)}
column that has the cluster values.}

\item{sampleid}{A \code{character(1)} specifying which sample to plot from
\code{colData(sce)$sample_name}.}

\item{colors}{A vector of colors to use for visualizing the clusters
from \code{clustervar}. If the vector has names, then those should match the
values of \code{clustervar}.}

\item{spatial}{A \code{logical(1)} indicating whether to include the histology
layer from \code{\link[=geom_spatial]{geom_spatial()}}. If you plan to use
\link[plotly:ggplotly]{ggplotly()} then it's best to set this to \code{FALSE}.}

\item{title}{The title for the plot.}
}
\value{
A \link[ggplot2:ggplot]{ggplot2} object.
}
\description{
This function visualizes the clusters for one given sample at the spot-level
using (by default) the histology information on the background. This is the
function that does all the plotting behind \code{\link[=sce_image_clus]{sce_image_clus()}}. To visualize
gene-level (or any continuous variable) use \code{\link[=sce_image_gene_p]{sce_image_gene_p()}}.
}
\examples{

## Obtain the necessary data
if (!exists("sce")) sce <- fetch_data("sce")
sce_sub <- sce[, sce$sample_name == "151673"]

## Use the manual color palette by Lukas M Weber
## Don't plot the histology information
sce_image_clus_p(
    sce = sce_sub,
    d = as.data.frame(colData(sce_sub)),
    clustervar = "layer_guess_reordered",
    sampleid = "151673",
    colors = libd_layer_colors,
    title = "151673 LIBD Layers",
    spatial = FALSE
)

## Clean up
rm(sce_sub)
}
\seealso{
Other Spatial cluster visualization functions: 
\code{\link{sce_image_clus}()},
\code{\link{sce_image_grid}()}
}
\concept{Spatial cluster visualization functions}
